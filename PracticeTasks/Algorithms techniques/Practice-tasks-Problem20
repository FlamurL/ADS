/*
We are given N scheduled meetings. Write an algorithm that finds the minimum number of meeting rooms needed to schedule those meetings.

Input: The first number in the input is the number of meetings N, then in the next N lines are the start and end time for each of the meetings.

Output: The minimum number of needed meeting rooms to schedule the meetings.

For example:
Input
5
1 2
1 2
5 10
11 14
15 20
Result
2

Input
5
1 2
2 3
3 4
4 5
5 6
Result
2


*/
import java.util.Scanner;


//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Main {
    public static void main(String[] args) {

Scanner sc = new Scanner(System.in);
int n=sc.nextInt();
int [][] arr = new int[n][2];
for(int i=0;i<n;i++){
    for(int j=0;j<2;j++){
        arr[i][j]=sc.nextInt();

    }
}

int cnt=1;
for(int i=0;i<n;i++){
    int cnt1=1;
    for(int j=0;j<n;j++){
        if(i!=j){
            if(arr[j][0]<=arr[i][0]&&arr[j][1]>=arr[i][0])
                cnt1++;
        }

    }
    cnt=Math.max(cnt,cnt1);
    cnt1=1;
    for(int j=0;j<n;j++){
        if(i!=j){
            if(arr[j][0]<=arr[i][1]&&arr[j][1]>=arr[i][1])
                cnt1++;
        }

    }
    cnt=Math.max(cnt,cnt1);


}
        System.out.print(cnt);

    }
}
